AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-demo Sample SAM Application for Demo Purpose

  '
Parameters:
  TableName:
    Type: String
    Default: demo
  Department:
    Type: String
    Default: engineering
  Apptype:
    Type: String
    Default: serverless
  DemoApiName:
    Type: String
    Default: DemoApi
  DemoFunctionRoleName:
    Type: String
    Default: DemoFunctionDynamoDBFullAccess
Globals:
  Function:
    Timeout: 180
Resources:
  DemoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Ref: TableName
      SSESpecification:
        SSEEnabled: true
      Tags:
        Department:
          Ref: Department
        AppType:
          Ref: Apptype
  DemoFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: DemoFunctionRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: AccessToDemoDynamoDB
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            Resource:
              Fn::GetAtt:
              - DemoTable
              - Arn
      - PolicyName: AccessToDemoCloudWatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  DemoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Ref: DemoApiName
      StageName: Prod
  DemoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://serverless-aws-sam-deployment/06fb0b0f4d0a9d7d2c54fd768dcce22c
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 300
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - DemoFunctionRole
        - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Events:
        Demo:
          Type: Api
          Properties:
            RestApiId:
              Ref: DemoApi
            Path: /demo
            Method: get
            RequestParameters:
            - method.request.querystring.id
Outputs:
  DemoApi:
    Description: API Gateway endpoint URL for Prod stage for Demo Application
    Value:
      Fn::Sub: https://${DemoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/demo/
  DemoFunction:
    Description: Demo Lambda Function ARN
    Value:
      Fn::GetAtt:
      - DemoFunction
      - Arn
  DemoFunctionIamRole:
    Description: Implicit IAM Role created for Demo function
    Value:
      Fn::GetAtt:
      - DemoFunctionRole
      - Arn
  DemoTable:
    Description: Demo DynamoDB Table ARN
    Value:
      Fn::GetAtt:
      - DemoTable
      - Arn
